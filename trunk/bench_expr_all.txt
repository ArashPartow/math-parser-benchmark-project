#
# triviale Gleichungen
#
# direkte Rückgabe von Konstanten und Zusammenfassung von Konstanten
# Alle gleichungen hier können auf eine Konstante zurückgeführt werden
1
123456.123456
-123456.123456


#
# Variablen und Variablenzusammenfassung
#
# direkte Rückgabe von Variablen Zusammenfassung von Variablen
# Alle gleichungen hier können auf eine Variable oder einen Term
# der Form a*x+b mit a,b konstant zurückgeführt werden
a
a+1.1
a*2.2
2.2*a+1.1
(2.2*a+1.1)*3.3


#
# Polynome / Optimierung von Potenzfunktionen testen
#
# Polynome mit integer exponenten
1.1*a^2
1.1*a^2 + 2.2*b^3
1.1*a^2 + 2.2*b^3 + 3.3*c^4
1.1*a^2 + 2.2*b^3 + 3.3*c^4 + 3.3*a^5
# hohe exponenten; zeigt ob die optimiert werden?
1.1*a^7 + 2.2*b^8
1.1234567*a^17 + 2.1234567*b^28 + 2.1234567*c^38


# Polynome mit floating point exponenten
# (std::pow ist langsam für float typem)
1.1*a^2.01
1.1*a^2.01 + 2.2*b^3.01
1.1*a^2.01 + 2.2*b^3.01 + 3.3*c^4.01
1.1*a^2.01 + 2.2*b^3.01 + 3.3*c^4.01 + 4.4*a^5.01


#
# Optimierungen testen
#
# Ausnutzen des Assoziativgesetz
# assoziativ
a+b+c
a*b*c
# nicht assoziativ (als referenz)
a-b-c
a/b/c

#
a+-b
# <ibg 20130714> commented:
# There is no consensus regarding this syntax. We should not include
# expressions syntax that is only supported by a single parser.
#a+-+b
#-a+-+b
#+a*+b
#+a/+b
# </ibg>
a^2+1
1.1+a^2
b^2*2
2.2*b^2
a^2^3
a^2^3-a^8
+a^+2^+3-a^+8
a^-2^3-1/a^8
a^-2^-3-1/a^1/8
-a^2^3-a^8
(-1+a^2^3)-(a^2^3-1)
(-1*a^2^3)-(a^2^3*-1)
(a^2^3/4)-(a^2^3/4)
a^2.2^3.3-a^13.4894687605338489

# Gleichungen, die Mängel in der optimierung sichtbar machen
# -> muParserSSE beschränkte Registerzahl bremst die 2. Gleichung
# -> muParser optimierer versagt
(1.1*(2.2*(3.3*(4.4*(5.5*(6.6*(7.7*(a+b))))))))
(1.1+(2.2+(3.3+(4.4+(5.5+(6.6+(7.7+(a*b))))))))
((((((((a/b)*1.1)*2.2)*3.3)*4.4)*5.5)*6.6)*7.7)
((((((((a/b)+1.1)+2.2)+3.3)+4.4)+5.5)+6.6)+7.7)
(2.2+(3.3+(4.4+(5.5+(((((a*b)*9.9)*8.8)*7.7)*6.6)))))
(2.2*(3.3*(4.4*(5.5*(((((a-b)+9.9)+8.8)+7.7)+6.6)))))
((((((((a/b)*(1.1/2.2))*(2.2/3.3))*(3.3/4.4))*(4.4/5.5))*(5.5/6.6))*(6.6/7.7))*(7.7/8.8))
((((((((a/b)+(1.1/2.2))+(2.2/3.3))+(3.3/4.4))+(4.4/5.5))+(5.5/6.6))+(6.6/7.7))+(7.7/8.8))
((2.2/3.3)+((3.3/4.4)+((4.4/5.5)+((5.5/6.6)+(((((a*b)*(9.9/10.10))*(8.8/9.9))*(7.7/8.8))*(6.6/8.8))))))
((2.2/3.3)*((3.3/4.4)*((4.4/5.5)*((5.5/6.6)*(((((a*b)+(9.9/10.10))+(8.8/9.9))+(7.7/8.8))+(6.6/8.8))))))
(1.1*(2.2*(3.3*(4.4+(5.5+(6.6+(7.7*(8.8*(9.9*(10.10*(a+b)))))))))))
(((((((((((a/b)*1.1)*2.2)*3.3)+4.4)+5.5)+6.6)*7.7)*8.8)+9.9)+10.10)




# Gleichungen von Garry Beenes benchmark
a*2+b*2
sin(a)+sin(b)
a^2+b^2
(1.1+a^2)+(2.2+b^2)
(a^2.1/3.3)+(b^2.1/3.3)
abs(sin(sqrt(a^2.1+b^2.1))*255)
abs(sin(sqrt(a^2+b^2))*255)
abs(sin(sqrt(a*a+b*b))*255)


# http://dabroz.scythe.pl/2010/11/18/quick-data-transformation
#2+min(a+a+a,1/5)*(2+a*3)


# Gleichungen mit logischen verknüpfungen
sqrt(a)<sin(8)
(10+sqrt(a))<(sin(8)^2)


# Gleichungen mit Variablen, ohne Funktionen
#max(3.33, min(sqrt(1 - sin(2 * x) + cos(pi / y) / 3), 1.11))

(b+a/b) * (a-b/a)
a/((a+b)*(a-b))/b
1.1-((a*b)+(a/b))-3.3
a+b
(a+b)*3.3
(2*a+2*a)
2*(2*a)
(2*a)*2
-(b^1.1)
a+b*c
a*b+c
a+b*(a+b)
(1.1+b)*(-3.3)
a+b-e*pi/5^6
a^b/e*pi-5+6
2.2*(a+b)
((1.1+a)/2.2)+(b-(3.3*c))
((1.1+a+2.2+b+3.3)+c+4.4+a+5.5+b+6.6+c+7.7)/(1.1+a+2.2+b+3.3+c+4.4+a+5.5+(b+6.6+c+7.7))
(1.1+a+2.2+b+3.3+c+4.4+(a+5.5+b+6.6)+c+7.7)*(1.1+(a+2.2+b+3.3)+c+4.4+a+5.5+b+6.6+c+7.7)

(a/((((b+(((e*(((((pi*((((3.45*((pi+a)+pi))+b)+b)*a))+0.68)+e)+a)/a))+a)+b))+b)*a)-pi))
(b+1.1)*(b+2.2)*(b+3.3)*(b+4.4)*(b+5.5)*(b+6.6)*(b+7.7)*(b+8.8)*(b+9.9)*(b+10.10)*(b+11.11)*(b+12.12)
(1.1+(b+1)*(b+2))*(2.2+(b+3)*(b+4))*(3.3+(b+5)*(b+6))*(4.4+(b+7)*(b+8))*(5.5+(b+9)*(b+10))*(6.6+(b+11)*(b+12))
(5.5+a)+(2*b-2/3*a)*(b/3+a/4)+(b+7.7)

2.2*a^1+1.1
3.3*a^2+2.2*a^1+1.1
4.4*a^3+3.3*a^2+2.2*a^1+1.1
5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
9.9*a^8+8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
1.1*a^9+9.9*a^8+8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
2.2*a^10+1.1*a^9+9.9*a^8+8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
3.3*a^11+2.2*a^10+1.1*a^9+9.9*a^8+8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1
4.4*a^12+3.3*a^11+2.2*a^10+1.1*a^9+9.9*a^8+8.8*a^7+7.7*a^6+6.6*a^5+5.5*a^4+4.4*a^3+3.3*a^2+2.2*a^1+1.1

(2.2*a+1.1)
((3.3*a+2.2)*a+1.1)
(((4.4*a+3.3)*a+2.2)*a+1.1)
((((5.5*a+4.4)*a+3.3)*a+2.2)*a+1.1)
(((((6.6*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
((((((7.7*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
(((((((8.8*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
((((((((9.9*a+8.8)*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
(((((((((1.1*a+9.9)*a+8.8)*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
((((((((((2.20*a+1.1)*a+9.9)*a+8.8)*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
(((((((((((3.3*a+2.2)*a+1.1)*a+9.9)*a+8.8)*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)
((((((((((((4.4*a+3.3)*a+2.2)*a+1.1)*a+9.9)*a+8.8)*a+7.7)*a+6.6)*a+5.5)*a+4.4)*a+3.3)*a+2.2)*a+1.1)


#physikalisch relevante gleichungen (variablen sind willkürlich gesetzt)
1/(a*sqrt(2*pi))*e^(-0.5*((b-a)/a)^2)
a+(cos(b-sin(2/a*pi))-sin(a-cos(2*b/pi)))-b
(((((((7*a+6)*a+5)*a+4)*a+3)*a+2)*a+1)*a+0.1)
7.7*a^7 + 6.6*a^6 + 5.6*a^5 + 4.4*a^4 + 3.3*a^3 + 2.2*a^2 + 1.1*a^1 + 0.1


# Gleichungen mit Variablen und Funktionen
sin(2.2 * a) + cos(pi / b)
1 - sin(2.2 * a) + cos(pi / b)
sqrt(1 - sin(2.2 * a) + cos(pi / b) / 3.3)
(a^2 / sin(2 * pi / b)) -a / 2.2
1-(a/b*0.5)
e^log(7*a)
10^log(3+b)
(cos(2.41)/b)
-(sin(pi+a)+1)
a-(e^(log(7+b)))
(1.123*sin(a)+2.1234)/3.1237
(1.123*cos(a)-3.1235)/3.1238
(1.123*tan(a)+2.1236)/3.1239


# Testen auf optimierte Winkelfunktionen und Funktionsaufrufoverhead
sin(a)
cos(a)
tan(a)
sqrt(a)
abs(a)
# von mparser
(0.1*a+1)*a+1.1
(0.1*a+1)*a+1.1-sin(a)
(0.1*a+1)*a+1.1-sin(a)-log(a)/a*3/4
#The following should all be completly optimised to a single value
((2/3)-(3/2))*((3/2)-(2/3))
1.1234567*(2.1234567/3.1234567)
(1.1*(2.2/3.3))-4.4
((7.7*(2.2/3.3))-4.4)^2.1
(1.1*2.2*3.3*4.4*5.5*6.6*7.7)/(1.1*2.2*3.3*4.4*5.5*6.6*7.7)
(1-2)+(2-3)+(3-4)+(4-5)+(5-6)+(6-7)
((7-2)+(2-3)*(3-4))/((4-5)*(5-6)+(6-9))
sin(pi/6)+cos(2*pi/6)
sin(pi/2)+cos(pi/2)
sin((1.1+2.2/2.2*3.3)*4.4^5.5)+cos(6.6*pi)
(1.1*(2.2*(3.3*(4.4*(5.5*(6.6*(7.7*(123.456+654.321))))))))
(1.1*(2.2*(3.3*(4.4*(5.5*(6.6*(7.7*(123.456+654.321))))))))
((((((((123.456/654.321)*1.1)*2.2)*3.3)*4.4)*5.5)*6.6)*7.7)
((((((((123.456/654.321)+1.1)+2.2)+3.3)+4.4)+5.5)+6.6)+7.7)
(2.2+(3.3+(4.4+(5.5+(((((123.456*654.321)*9.9)*8.8)*7.7)*6.6)))))
(2.2*(3.3*(4.4*(5.5*(((((123.456-654.321)+9.9)+8.8)+7.7)+6.6)))))
((((((((123.456/654.321)*(1.1/2.2))*(2.2/3.3))*(3.3/4.4))*(4.4/5.5))*(5.5/6.6))*(6.6/7.7))*(7.7/8.8))
((((((((123.456/654.321)+(1.1/2.2))+(2.2/3.3))+(3.3/4.4))+(4.4/5.5))+(5.5/6.6))+(6.6/7.7))+(7.7/8.8))
((2.2/3.3)+((3.3/4.4)+((4.4/5.5)+((5.5/6.6)+(((((123.456*654.321)*(9.9/10.10))*(8.8/9.9))*(7.7/8.8))*(6.6/8.8))))))
((2.2/3.3)*((3.3/4.4)*((4.4/5.5)*((5.5/6.6)*(((((123.456*654.321)+(9.9/10.10))+(8.8/9.9))+(7.7/8.8))+(6.6/8.8))))))
(1.1*(2.2*(3.3*(4.4+(5.5+(6.6+(7.7*(8.8*(9.9*(10.10*(123.456+654.321)))))))))))
(((((((((((123.456-654.321)*1.1)*2.2)*3.3)+4.4)+5.5)+6.6)*7.7)*8.8)+9.9)+10.10)

# conditional expressions
# step function
#if(x<0, -10, 10)
#if(((y + 5) <= 9),1 + w, 2 / z)
# short cut evaluation?
#if(x<0, (((((((7*a+6)*a+5)*a+4)*a+3)*a+2)*a+1)*a+ 0.1), sqrt(1 - sin(2.2 * a) + cos(pi / b) / 3.3))
