import "c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\prsht.idl";
import "c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\mshtml.idl";
import "c:\program files\microsoft visual studio .net 2003\vc7\platformsdk\include\dimm.idl";
import "c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\mshtmhst.idl";
import "c:\program files\microsoft visual studio .net 2003\vc7\platformsdk\include\docobj.idl";
import "c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\exdisp.idl";
import "c:\Program Files\Microsoft Visual Studio .NET 2003\Vc7\PlatformSDK\include\objsafe.idl";

[
	object,
	uuid(91893C09-F41E-4389-9185-42B2E0D5A49E),
	dual,
	helpstring("IMTParserPlugin Interface"),
	pointer_default(unique)
] 
#line 21 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
interface IMTParserPlugin : IDispatch {
#line 23 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	[id(1),helpstring("Return the number of constants")] HRESULT  getNbConsts([out,retval] int *pNbConsts);
	[id(2),helpstring("Return the information about a constant")] HRESULT  getConst([in] int constID, [out,retval] struct SMTPluginConst *pConst);
#line 26 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	[id(3),helpstring("Return the number of functions")] HRESULT  getNbFuncs([out,retval] int *pNbFuncs);
	[id(4),helpstring("Create a new function's object")] HRESULT  newFunc([in] int funcID, [out,retval] int *pFunc);
#line 29 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	[id(5),helpstring("Return the number of operators")] HRESULT  getNbOps([out,retval] int *pNbOps);
	[id(6),helpstring("Create a new operator's object")] HRESULT  newOp([in] int opID, [out,retval] int *pOp);
	[id(7),helpstring("Return the compatible MTParser library's interface")] HRESULT  getMTParserVersion([out,retval] BSTR *pVersion );
#line 33 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	[id(8),helpstring("Return the info file and the compatible version")] HRESULT  getInfoFile([out] BSTR *pInfoFile , [out] BSTR *pVersion , [out,retval] int *pIsAvailable);
};


[ version(1.0), uuid(CE936DE7-B62A-4C7E-B9B7-5BCF7EF425AA), helpstring("MTParserPlugin 1.0 Type Library") ]
library MTParserPlugin
{
	importlib("stdole2.tlb");
	importlib("olepro32.dll");

	[
		custom(8AFCDA7F-33B7-3120-86A8-754D2C0C0578, "library_block"),
		uuid(9D7C0E14-9312-3884-9F47-BFCFA847AFCF)
	] 
#line 9 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	struct SMTPluginConst {
		BSTR name;
		double val;
	};

	[
		version(1.0),
		uuid(99DA618B-2DA5-444C-AEA2-195C02F11F5A),
		helpstring("MTParserPlugin Class")
	] 
#line 49 "e:\\temp\\mtparser_src\\plugins\\mtparserplugin\\mtparserplugin\\mtparserpluginidl.h"
	coclass CMTParserPlugin {
		interface IMTParserPlugin;
	};

}

